local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

print("Executed")
    local esplibrary = {
        enabled = true,
        maxdistance = 3000,
        --
        textfont = 2,
        textsize = 12,
        --
        tweenhealth = false,
        --
        friendcheck = false,
        visiblecheck = false,
        teamcheck = true,
        --
        distance_format = 0.4,
        distance_measurement = "m",
        -- BOX/ETC
        boxes = {["enabled"] = true, ["color"] = Color3.fromRGB(255, 255, 255), ["type"] = "Bounding"},
        healthbars = {["enabled"] = true},
        healthtext = {["enabled"] = true},
        -- TEXT
        names = {["enabled"] = true, ["displaynames"] = false, ["color"] = Color3.fromRGB(255, 255, 255)},
        distance = {["false"] = true, ["color"] = Color3.fromRGB(255, 255, 255)},
        weapon = {["false"] = true, ["color"] = Color3.fromRGB(255, 255, 255)},
        --
        chams = {["false"] = false, ["color"] = Color3.fromRGB(255, 255, 255), ["transparency"] = 0},
        glow = {["false"] = false, ["color"] = Color3.fromRGB(255, 0, 140), ["transparency"] = 0},

        skeleton = {["skeleton"] = false, ["color"] = Color3.fromRGB(255, 255, 255)}


    }






local Window = Library:CreateWindow({
     Title = 'SavWare',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    Main = Window:AddTab('Main'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}


local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Aimbot')
local RightGroupBox = Tabs.Main:AddLeftGroupbox('visuals')
RightGroupBox:AddToggle('boxes', {
    Text = 'boxes',
    Default = false, 
    Callback = function(Value)
        esplibrary.boxes.enabled = Value
    end})
    
    RightGroupBox:AddToggle('healthbar', {
        Text = 'healthbar',
        Default = false, 
        Callback = function(Value)
            esplibrary.healthbars.enabled = Value
        end})

        RightGroupBox:AddToggle('healthtext', {
            Text = 'healthtext',
            Default = false, 
            Callback = function(Value)
                esplibrary.healthtext.enabled = Value
            end})
            
            RightGroupBox:AddToggle('Names', {
                Text = 'Names',
                Default = false, 
                Callback = function(Value)
                    esplibrary.names.enabled = Value
                end})

                RightGroupBox:AddToggle('skeleton', {
                    Text = 'skeleton esp',
                    Default = false, 
                    Callback = function(Value)
                        esplibrary.skeleton.enabled = Value
                    end})









                    RightGroupBox:AddToggle('Aimbot', {
                        Text = 'Aimbot',
                        Default = false, 
                        Callback = function(Value)
                            aimbotEnabled = Value
                            if aimbotEnabled and not running then
                                running = true
                                Aimbot()  -- Start the aimbot when toggled on
                            elseif not aimbotEnabled then
                                running = false  -- Stop the loop when toggled off
                            end
                        end
                    })
                    
                
               -- Main camera locking function
local function Aimbot()
    target = getClosestPlayer()
    
    if target and target.Character and target.Character:FindFirstChild("Head") then
        local targetPosition = target.Character.Head.Position
        local cameraPosition = Camera.CFrame.p
        local direction = (targetPosition - cameraPosition).unit

        -- Smooth camera lock to the target's position
        Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(cameraPosition, cameraPosition + direction), AimSmoothness)
    end
end

-- Toggle aim with 'E' key
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.E then -- Key to toggle the aim (E in this case)
        aiming = not aiming
    end
end)

-- Update loop for camera locking
RunService.RenderStepped:Connect(function()
    if aiming then
        cameraLock()
    end
end)




